<?xml version='1.0' encoding='utf-8' ?>

<!-- build 10000.16.0917.1429                               -->
<workbook source-build='10.0.1 (10000.16.0917.1429)' source-platform='win' version='10.0' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='arrestdata-all' inline='true' name='federated.0nbbx59030wusu1f7b64o0gf5iou' version='10.0'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='arrestdata-all' name='textscan.09ugwb501aacsl1e8fer50iv806g'>
            <connection class='textscan' directory='C:/Users/Jesse/Desktop/bd-hack/data/processed' filename='arrestdata-all.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.09ugwb501aacsl1e8fer50iv806g' name='arrestdata-all.csv' table='[arrestdata-all#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='integer' name='F1' ordinal='0' />
            <column datatype='date' name='dob' ordinal='1' />
            <column datatype='string' name='pstreet' ordinal='2' />
            <column datatype='string' name='pcity' ordinal='3' />
            <column datatype='real' name='arrtime' ordinal='4' />
            <column datatype='date' name='arrdate' ordinal='5' />
            <column datatype='string' name='arrstreet' ordinal='6' />
            <column datatype='string' name='arrstatus' ordinal='7' />
            <column datatype='string' name='charge' ordinal='8' />
            <column datatype='real' name='age' ordinal='9' />
            <column datatype='integer' name='driving' ordinal='10' />
            <column datatype='integer' name='arryear' ordinal='11' />
            <column datatype='string' name='arrweekday' ordinal='12' />
            <column datatype='integer' name='key' ordinal='13' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>F1</remote-name>
            <remote-type>20</remote-type>
            <local-name>[F1]</local-name>
            <parent-name>[arrestdata-all.csv]</parent-name>
            <remote-alias>F1</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>dob</remote-name>
            <remote-type>133</remote-type>
            <local-name>[dob]</local-name>
            <parent-name>[arrestdata-all.csv]</parent-name>
            <remote-alias>dob</remote-alias>
            <ordinal>1</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;date&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>pstreet</remote-name>
            <remote-type>129</remote-type>
            <local-name>[pstreet]</local-name>
            <parent-name>[arrestdata-all.csv]</parent-name>
            <remote-alias>pstreet</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>pcity</remote-name>
            <remote-type>129</remote-type>
            <local-name>[pcity]</local-name>
            <parent-name>[arrestdata-all.csv]</parent-name>
            <remote-alias>pcity</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>arrtime</remote-name>
            <remote-type>5</remote-type>
            <local-name>[arrtime]</local-name>
            <parent-name>[arrestdata-all.csv]</parent-name>
            <remote-alias>arrtime</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>arrdate</remote-name>
            <remote-type>133</remote-type>
            <local-name>[arrdate]</local-name>
            <parent-name>[arrestdata-all.csv]</parent-name>
            <remote-alias>arrdate</remote-alias>
            <ordinal>5</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;date&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>arrstreet</remote-name>
            <remote-type>129</remote-type>
            <local-name>[arrstreet]</local-name>
            <parent-name>[arrestdata-all.csv]</parent-name>
            <remote-alias>arrstreet</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>arrstatus</remote-name>
            <remote-type>129</remote-type>
            <local-name>[arrstatus]</local-name>
            <parent-name>[arrestdata-all.csv]</parent-name>
            <remote-alias>arrstatus</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>charge</remote-name>
            <remote-type>129</remote-type>
            <local-name>[charge]</local-name>
            <parent-name>[arrestdata-all.csv]</parent-name>
            <remote-alias>charge</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>age</remote-name>
            <remote-type>5</remote-type>
            <local-name>[age]</local-name>
            <parent-name>[arrestdata-all.csv]</parent-name>
            <remote-alias>age</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>driving</remote-name>
            <remote-type>20</remote-type>
            <local-name>[driving]</local-name>
            <parent-name>[arrestdata-all.csv]</parent-name>
            <remote-alias>driving</remote-alias>
            <ordinal>10</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>arryear</remote-name>
            <remote-type>20</remote-type>
            <local-name>[arryear]</local-name>
            <parent-name>[arrestdata-all.csv]</parent-name>
            <remote-alias>arryear</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>arrweekday</remote-name>
            <remote-type>129</remote-type>
            <local-name>[arrweekday]</local-name>
            <parent-name>[arrestdata-all.csv]</parent-name>
            <remote-alias>arrweekday</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>key</remote-name>
            <remote-type>20</remote-type>
            <local-name>[key]</local-name>
            <parent-name>[arrestdata-all.csv]</parent-name>
            <remote-alias>key</remote-alias>
            <ordinal>13</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[arrestdata-all.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='integer' name='[Age (bin)]' role='dimension' type='quantitative'>
        <calculation class='bin' decimals='0' formula='[age]' peg='0' size='1.6' />
      </column>
      <column caption='Age(Student/Adult)' datatype='string' name='[AgeAsInt (group)]' role='dimension' type='ordinal'>
        <calculation class='categorical-bin' column='[Calculation_724516656912158733]' new-bin='true'>
          <bin default-name='false' value='&quot;Adult&quot;'>
            <value>24</value>
            <value>25</value>
            <value>26</value>
            <value>27</value>
            <value>28</value>
            <value>29</value>
            <value>30</value>
            <value>31</value>
            <value>32</value>
            <value>33</value>
            <value>34</value>
            <value>35</value>
            <value>36</value>
            <value>37</value>
            <value>38</value>
            <value>39</value>
            <value>40</value>
            <value>41</value>
            <value>42</value>
            <value>43</value>
            <value>44</value>
            <value>45</value>
            <value>46</value>
            <value>47</value>
            <value>48</value>
            <value>49</value>
            <value>50</value>
            <value>51</value>
            <value>52</value>
            <value>53</value>
            <value>54</value>
            <value>55</value>
            <value>56</value>
            <value>57</value>
            <value>58</value>
            <value>59</value>
            <value>60</value>
            <value>61</value>
            <value>62</value>
            <value>63</value>
            <value>64</value>
            <value>65</value>
            <value>66</value>
            <value>67</value>
            <value>68</value>
            <value>69</value>
            <value>70</value>
            <value>71</value>
            <value>72</value>
            <value>73</value>
            <value>74</value>
            <value>75</value>
            <value>76</value>
            <value>77</value>
            <value>78</value>
            <value>79</value>
            <value>80</value>
            <value>81</value>
            <value>82</value>
            <value>83</value>
            <value>84</value>
            <value>85</value>
            <value>86</value>
            <value>87</value>
            <value>88</value>
            <value>89</value>
            <value>90</value>
            <value>91</value>
            <value>92</value>
            <value>93</value>
            <value>94</value>
            <value>96</value>
            <value>100</value>
            <value>103</value>
          </bin>
          <bin default-name='false' value='&quot;Student Age&quot;'>
            <value>11</value>
            <value>12</value>
            <value>13</value>
            <value>14</value>
            <value>15</value>
            <value>16</value>
            <value>17</value>
            <value>18</value>
            <value>19</value>
            <value>20</value>
            <value>21</value>
            <value>22</value>
            <value>23</value>
          </bin>
        </calculation>
      </column>
      <column datatype='string' name='[ArrMO (group)]' role='dimension' type='nominal'>
        <calculation class='categorical-bin' column='[Calculation_724516656900886538]' new-bin='true'>
          <bin default-name='false' value='&quot;Spring/Fall&quot;'>
            <value>&quot;April&quot;</value>
            <value>&quot;December&quot;</value>
            <value>&quot;February&quot;</value>
            <value>&quot;January&quot;</value>
            <value>&quot;March&quot;</value>
            <value>&quot;May&quot;</value>
            <value>&quot;November&quot;</value>
            <value>&quot;October&quot;</value>
            <value>&quot;September&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;Summer&quot;'>
            <value>&quot;August&quot;</value>
            <value>&quot;July&quot;</value>
            <value>&quot;June&quot;</value>
          </bin>
        </calculation>
      </column>
      <column datatype='string' name='[Arrstreet (group)]' role='dimension' type='nominal'>
        <calculation class='categorical-bin' column='[arrstreet]' new-bin='true' />
      </column>
      <column caption='Wkday/Weekend' datatype='string' name='[Arrweekday (group)]' role='dimension' type='nominal'>
        <calculation class='categorical-bin' column='[arrweekday]' new-bin='true'>
          <bin default-name='false' value='&quot;Weekday&quot;'>
            <value>&quot;Monday&quot;</value>
            <value>&quot;Thursday&quot;</value>
            <value>&quot;Tuesday&quot;</value>
            <value>&quot;Wednesday&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;Weekend&quot;'>
            <value>&quot;Friday&quot;</value>
            <value>&quot;Saturday&quot;</value>
            <value>&quot;Sunday&quot;</value>
          </bin>
        </calculation>
      </column>
      <column aggregation='CountD' caption='ArrMO' datatype='string' default-role='measure' default-type='quantitative' name='[Calculation_724516656900886538]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='DATENAME(&quot;month&quot;,[arrdate])' />
      </column>
      <column aggregation='Sum' caption='AgeAsInt' datatype='integer' name='[Calculation_724516656912158733]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='INT([age])' />
      </column>
      <column caption='Calculation1' datatype='datetime' name='[Calculation_724516656914120718]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='DATETIME([arrtime])' />
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Age' datatype='real' name='[age]' role='measure' type='quantitative' />
      <column caption='Arrdate' datatype='date' name='[arrdate]' role='dimension' type='ordinal' />
      <column caption='Arrstatus' datatype='string' name='[arrstatus]' role='dimension' type='nominal' />
      <column caption='Arrstreet' datatype='string' name='[arrstreet]' role='dimension' type='nominal' />
      <column caption='Arrtime' datatype='real' name='[arrtime]' role='measure' type='quantitative' />
      <column caption='Arrweekday' datatype='string' name='[arrweekday]' role='dimension' type='nominal' />
      <column caption='Arryear' datatype='integer' name='[arryear]' role='measure' type='quantitative' />
      <column caption='Charge' datatype='string' name='[charge]' role='dimension' type='nominal' />
      <column caption='Dob' datatype='date' name='[dob]' role='dimension' type='ordinal' />
      <column aggregation='Sum' caption='Driving' datatype='integer' name='[driving]' role='dimension' type='ordinal' />
      <column caption='Key' datatype='integer' name='[key]' role='dimension' type='ordinal' />
      <column caption='Pcity' datatype='string' name='[pcity]' role='dimension' type='nominal' />
      <column caption='Pstreet' datatype='string' name='[pstreet]' role='dimension' type='nominal' />
      <column-instance column='[Calculation_724516656912158733]' derivation='None' name='[none:Calculation_724516656912158733:ok]' pivot='key' type='ordinal' />
      <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
      <column-instance column='[arrweekday]' derivation='None' name='[none:arrweekday:nk]' pivot='key' type='nominal' />
      <layout dim-ordering='alphabetic' dim-percentage='0.626866' measure-ordering='alphabetic' measure-percentage='0.373134' rowDisplayCount='500000' show-aliased-fields='true' show-hidden-fields='true' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:arrweekday:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Monday&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Thursday&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Tuesday&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Wednesday&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Sunday&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;NA&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Friday&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Saturday&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[Arrweekday (group)]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Weekday&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Weekend&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[ArrMO (group)]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Spring/Fall&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Summer&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Calculation_724516656912158733:ok]' type='palette'>
            <map to='#499894'>
              <bucket>17</bucket>
            </map>
            <map to='#499894'>
              <bucket>37</bucket>
            </map>
            <map to='#499894'>
              <bucket>57</bucket>
            </map>
            <map to='#499894'>
              <bucket>77</bucket>
            </map>
            <map to='#499894'>
              <bucket>103</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>%null%</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>29</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>49</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>69</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>89</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>13</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>33</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>53</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>73</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>93</bucket>
            </map>
            <map to='#79706e'>
              <bucket>21</bucket>
            </map>
            <map to='#79706e'>
              <bucket>41</bucket>
            </map>
            <map to='#79706e'>
              <bucket>61</bucket>
            </map>
            <map to='#79706e'>
              <bucket>81</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>18</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>38</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>58</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>78</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>14</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>34</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>54</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>74</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>94</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>27</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>47</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>67</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>87</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>0</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>30</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>50</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>70</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>90</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>25</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>45</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>65</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>85</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>15</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>35</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>55</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>75</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>96</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>22</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>42</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>62</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>82</bucket>
            </map>
            <map to='#d37295'>
              <bucket>23</bucket>
            </map>
            <map to='#d37295'>
              <bucket>43</bucket>
            </map>
            <map to='#d37295'>
              <bucket>63</bucket>
            </map>
            <map to='#d37295'>
              <bucket>83</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>26</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>46</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>66</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>86</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>28</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>48</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>68</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>88</bucket>
            </map>
            <map to='#e15759'>
              <bucket>19</bucket>
            </map>
            <map to='#e15759'>
              <bucket>39</bucket>
            </map>
            <map to='#e15759'>
              <bucket>59</bucket>
            </map>
            <map to='#e15759'>
              <bucket>79</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>16</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>36</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>56</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>76</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>100</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>11</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>31</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>51</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>71</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>91</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>24</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>44</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>64</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>84</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>20</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>40</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>60</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>80</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>12</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>32</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>52</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>72</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>92</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[AgeAsInt (group)]' type='palette'>
            <map to='#4e79a7'>
              <bucket>%null%</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Student Age&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;0&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Adult&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <default-sorts>
        <sort class='manual' column='[none:Forecast Indicator:nk]' direction='ASC'>
          <dictionary>
            <bucket>&quot;Actual&quot;</bucket>
            <bucket>&quot;Estimate&quot;</bucket>
          </dictionary>
        </sort>
      </default-sorts>
      <field-sort-info field-sort-order-type='custom-order'>
        <field-sort-custom-order field='F1' />
        <field-sort-custom-order field='dob' />
        <field-sort-custom-order field='pstreet' />
        <field-sort-custom-order field='pcity' />
        <field-sort-custom-order field='arrtime' />
        <field-sort-custom-order field='Calculation_724516656914120718' />
        <field-sort-custom-order field='arrdate' />
        <field-sort-custom-order field='Calculation_724516656900886538' />
        <field-sort-custom-order field='arrstreet' />
        <field-sort-custom-order field='arrstatus' />
        <field-sort-custom-order field='charge' />
        <field-sort-custom-order field='age' />
        <field-sort-custom-order field='Calculation_724516656912158733' />
        <field-sort-custom-order field='driving' />
        <field-sort-custom-order field='arryear' />
        <field-sort-custom-order field='arrweekday' />
        <field-sort-custom-order field='key' />
        <field-sort-custom-order field='Arrstreet (group)' />
        <field-sort-custom-order field='Age (bin)' />
      </field-sort-info>
    </datasource>
  </datasources>
  <actions>
    <action caption='Highlight 1 (generated)' name='[Action1]'>
      <activation auto-clear='true' type='on-select' />
      <source type='sheet' worksheet='W' />
      <command command='tsc:brush'>
        <param name='field-captions' value='Arrweekday' />
        <param name='target' value='W' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='Sheet 2'>
      <table>
        <view>
          <datasources>
            <datasource caption='arrestdata-all' name='federated.0nbbx59030wusu1f7b64o0gf5iou' />
          </datasources>
          <datasource-dependencies datasource='federated.0nbbx59030wusu1f7b64o0gf5iou'>
            <column aggregation='Sum' caption='AgeAsInt' datatype='integer' name='[Calculation_724516656912158733]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='INT([age])' />
            </column>
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column caption='Age' datatype='real' name='[age]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_724516656912158733]' derivation='Attribute' name='[attr:Calculation_724516656912158733:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_724516656912158733]' derivation='None' name='[none:Calculation_724516656912158733:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.0nbbx59030wusu1f7b64o0gf5iou].[attr:Calculation_724516656912158733:qk]' included-values='in-range'>
            <min>0</min>
            <max>103</max>
          </filter>
          <slices>
            <column>[federated.0nbbx59030wusu1f7b64o0gf5iou].[attr:Calculation_724516656912158733:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#000000' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0nbbx59030wusu1f7b64o0gf5iou].[sum:Number of Records:qk]</rows>
        <cols>[federated.0nbbx59030wusu1f7b64o0gf5iou].[none:Calculation_724516656912158733:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Sheet 4'>
      <table>
        <view>
          <datasources>
            <datasource caption='arrestdata-all' name='federated.0nbbx59030wusu1f7b64o0gf5iou' />
          </datasources>
          <datasource-dependencies datasource='federated.0nbbx59030wusu1f7b64o0gf5iou'>
            <column datatype='integer' name='[Age (bin)]' role='dimension' type='quantitative'>
              <calculation class='bin' decimals='0' formula='[age]' peg='0' size='1.6' />
            </column>
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column caption='Age' datatype='real' name='[age]' role='measure' type='quantitative' />
            <column caption='Arrweekday' datatype='string' name='[arrweekday]' role='dimension' type='nominal' />
            <column-instance column='[Number of Records]' derivation='Count' name='[cnt:Number of Records:qk]' pivot='key' type='quantitative' />
            <column aggregation='Sum' caption='Driving' datatype='integer' name='[driving]' role='dimension' type='ordinal' />
            <column-instance column='[Age (bin)]' derivation='None' name='[none:Age (bin):qk]' pivot='key' type='quantitative' />
            <column-instance column='[arrweekday]' derivation='None' name='[none:arrweekday:nk]' pivot='key' type='nominal' />
            <column-instance column='[driving]' derivation='None' name='[none:driving:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <sort class='manual' column='[federated.0nbbx59030wusu1f7b64o0gf5iou].[none:arrweekday:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Sunday&quot;</bucket>
              <bucket>&quot;Saturday&quot;</bucket>
              <bucket>&quot;Friday&quot;</bucket>
              <bucket>&quot;Monday&quot;</bucket>
              <bucket>&quot;Tuesday&quot;</bucket>
              <bucket>&quot;Wednesday&quot;</bucket>
              <bucket>&quot;Thursday&quot;</bucket>
              <bucket>&quot;NA&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing custom-mark-size-in-axis-units='1.0' mark-alignment='mark-alignment-left' mark-sizing-setting='marks-scaling-on' use-custom-mark-size='false' />
            <encodings>
              <color column='[federated.0nbbx59030wusu1f7b64o0gf5iou].[none:arrweekday:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0nbbx59030wusu1f7b64o0gf5iou].[cnt:Number of Records:qk]</rows>
        <cols>([federated.0nbbx59030wusu1f7b64o0gf5iou].[none:driving:ok] * [federated.0nbbx59030wusu1f7b64o0gf5iou].[none:Age (bin):qk])</cols>
        <show-full-range>
          <column>[federated.0nbbx59030wusu1f7b64o0gf5iou].[Age (bin)]</column>
        </show-full-range>
      </table>
    </worksheet>
    <worksheet name='Sheet 6'>
      <table>
        <view>
          <datasources>
            <datasource caption='arrestdata-all' name='federated.0nbbx59030wusu1f7b64o0gf5iou' />
          </datasources>
          <datasource-dependencies datasource='federated.0nbbx59030wusu1f7b64o0gf5iou'>
            <column datatype='string' name='[ArrMO (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[Calculation_724516656900886538]' new-bin='true'>
                <bin default-name='false' value='&quot;Spring/Fall&quot;'>
                  <value>&quot;April&quot;</value>
                  <value>&quot;December&quot;</value>
                  <value>&quot;February&quot;</value>
                  <value>&quot;January&quot;</value>
                  <value>&quot;March&quot;</value>
                  <value>&quot;May&quot;</value>
                  <value>&quot;November&quot;</value>
                  <value>&quot;October&quot;</value>
                  <value>&quot;September&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Summer&quot;'>
                  <value>&quot;August&quot;</value>
                  <value>&quot;July&quot;</value>
                  <value>&quot;June&quot;</value>
                </bin>
              </calculation>
            </column>
            <column caption='Wkday/Weekend' datatype='string' name='[Arrweekday (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[arrweekday]' new-bin='true'>
                <bin default-name='false' value='&quot;Weekday&quot;'>
                  <value>&quot;Monday&quot;</value>
                  <value>&quot;Thursday&quot;</value>
                  <value>&quot;Tuesday&quot;</value>
                  <value>&quot;Wednesday&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Weekend&quot;'>
                  <value>&quot;Friday&quot;</value>
                  <value>&quot;Saturday&quot;</value>
                  <value>&quot;Sunday&quot;</value>
                </bin>
              </calculation>
            </column>
            <column aggregation='CountD' caption='ArrMO' datatype='string' default-role='measure' default-type='quantitative' name='[Calculation_724516656900886538]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='DATENAME(&quot;month&quot;,[arrdate])' />
            </column>
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column caption='Arrdate' datatype='date' name='[arrdate]' role='dimension' type='ordinal' />
            <column caption='Arrweekday' datatype='string' name='[arrweekday]' role='dimension' type='nominal' />
            <column caption='Charge' datatype='string' name='[charge]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_724516656900886538]' derivation='None' name='[none:Calculation_724516656900886538:nk]' pivot='key' type='nominal' />
            <column-instance column='[charge]' derivation='None' name='[none:charge:nk]' pivot='key' type='nominal' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0nbbx59030wusu1f7b64o0gf5iou].[ArrMO (group)]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[ArrMO (group)]' member='&quot;Spring/Fall&quot;' />
              <groupfilter function='member' level='[ArrMO (group)]' member='&quot;Summer&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0nbbx59030wusu1f7b64o0gf5iou].[Arrweekday (group)]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Arrweekday (group)]' />
              <groupfilter function='member' level='[Arrweekday (group)]' member='&quot;NA&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0nbbx59030wusu1f7b64o0gf5iou].[none:Calculation_724516656900886538:nk]'>
            <groupfilter from='&quot;April&quot;' function='range' level='[none:Calculation_724516656900886538:nk]' to='&quot;September&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <sort class='computed' column='[federated.0nbbx59030wusu1f7b64o0gf5iou].[none:charge:nk]' direction='DESC' using='[federated.0nbbx59030wusu1f7b64o0gf5iou].[sum:Number of Records:qk]' />
          <filter class='quantitative' column='[federated.0nbbx59030wusu1f7b64o0gf5iou].[sum:Number of Records:qk]' included-values='in-range'>
            <min>19</min>
          </filter>
          <slices>
            <column>[federated.0nbbx59030wusu1f7b64o0gf5iou].[Arrweekday (group)]</column>
            <column>[federated.0nbbx59030wusu1f7b64o0gf5iou].[sum:Number of Records:qk]</column>
            <column>[federated.0nbbx59030wusu1f7b64o0gf5iou].[none:Calculation_724516656900886538:nk]</column>
            <column>[federated.0nbbx59030wusu1f7b64o0gf5iou].[ArrMO (group)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0nbbx59030wusu1f7b64o0gf5iou].[Arrweekday (group)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0nbbx59030wusu1f7b64o0gf5iou].[none:charge:nk] / [federated.0nbbx59030wusu1f7b64o0gf5iou].[Arrweekday (group)])</rows>
        <cols>[federated.0nbbx59030wusu1f7b64o0gf5iou].[sum:Number of Records:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Sheet 7'>
      <table>
        <view>
          <datasources>
            <datasource caption='arrestdata-all' name='federated.0nbbx59030wusu1f7b64o0gf5iou' />
          </datasources>
          <datasource-dependencies datasource='federated.0nbbx59030wusu1f7b64o0gf5iou'>
            <column datatype='string' name='[ArrMO (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[Calculation_724516656900886538]' new-bin='true'>
                <bin default-name='false' value='&quot;Spring/Fall&quot;'>
                  <value>&quot;April&quot;</value>
                  <value>&quot;December&quot;</value>
                  <value>&quot;February&quot;</value>
                  <value>&quot;January&quot;</value>
                  <value>&quot;March&quot;</value>
                  <value>&quot;May&quot;</value>
                  <value>&quot;November&quot;</value>
                  <value>&quot;October&quot;</value>
                  <value>&quot;September&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Summer&quot;'>
                  <value>&quot;August&quot;</value>
                  <value>&quot;July&quot;</value>
                  <value>&quot;June&quot;</value>
                </bin>
              </calculation>
            </column>
            <column caption='Wkday/Weekend' datatype='string' name='[Arrweekday (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[arrweekday]' new-bin='true'>
                <bin default-name='false' value='&quot;Weekday&quot;'>
                  <value>&quot;Monday&quot;</value>
                  <value>&quot;Thursday&quot;</value>
                  <value>&quot;Tuesday&quot;</value>
                  <value>&quot;Wednesday&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Weekend&quot;'>
                  <value>&quot;Friday&quot;</value>
                  <value>&quot;Saturday&quot;</value>
                  <value>&quot;Sunday&quot;</value>
                </bin>
              </calculation>
            </column>
            <column aggregation='CountD' caption='ArrMO' datatype='string' default-role='measure' default-type='quantitative' name='[Calculation_724516656900886538]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='DATENAME(&quot;month&quot;,[arrdate])' />
            </column>
            <column aggregation='Sum' caption='AgeAsInt' datatype='integer' name='[Calculation_724516656912158733]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='INT([age])' />
            </column>
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column caption='Age' datatype='real' name='[age]' role='measure' type='quantitative' />
            <column caption='Arrdate' datatype='date' name='[arrdate]' role='dimension' type='ordinal' />
            <column caption='Arrweekday' datatype='string' name='[arrweekday]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_724516656912158733]' derivation='None' name='[none:Calculation_724516656912158733:ok]' pivot='key' type='ordinal' />
            <column-instance aggregation-param='5' column='[Number of Records]' derivation='Percentile' name='[pcto:prc5:Number of Records:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Columns' type='PctTotal' />
            </column-instance>
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0nbbx59030wusu1f7b64o0gf5iou].[ArrMO (group)]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[ArrMO (group)]' member='&quot;Spring/Fall&quot;' />
              <groupfilter function='member' level='[ArrMO (group)]' member='&quot;Summer&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0nbbx59030wusu1f7b64o0gf5iou].[Arrweekday (group)]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Arrweekday (group)]' />
              <groupfilter function='member' level='[Arrweekday (group)]' member='&quot;NA&quot;' />
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.0nbbx59030wusu1f7b64o0gf5iou].[sum:Number of Records:qk]' included-values='in-range'>
            <min>19</min>
          </filter>
          <slices>
            <column>[federated.0nbbx59030wusu1f7b64o0gf5iou].[Arrweekday (group)]</column>
            <column>[federated.0nbbx59030wusu1f7b64o0gf5iou].[sum:Number of Records:qk]</column>
            <column>[federated.0nbbx59030wusu1f7b64o0gf5iou].[ArrMO (group)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='2'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols>([federated.0nbbx59030wusu1f7b64o0gf5iou].[none:Calculation_724516656912158733:ok] * [federated.0nbbx59030wusu1f7b64o0gf5iou].[pcto:prc5:Number of Records:qk])</cols>
      </table>
    </worksheet>
    <worksheet name='Sheet 8'>
      <table>
        <view>
          <datasources>
            <datasource caption='arrestdata-all' name='federated.0nbbx59030wusu1f7b64o0gf5iou' />
          </datasources>
          <datasource-dependencies datasource='federated.0nbbx59030wusu1f7b64o0gf5iou'>
            <column caption='Age(Student/Adult)' datatype='string' name='[AgeAsInt (group)]' role='dimension' type='ordinal'>
              <calculation class='categorical-bin' column='[Calculation_724516656912158733]' new-bin='true'>
                <bin default-name='false' value='&quot;Adult&quot;'>
                  <value>24</value>
                  <value>25</value>
                  <value>26</value>
                  <value>27</value>
                  <value>28</value>
                  <value>29</value>
                  <value>30</value>
                  <value>31</value>
                  <value>32</value>
                  <value>33</value>
                  <value>34</value>
                  <value>35</value>
                  <value>36</value>
                  <value>37</value>
                  <value>38</value>
                  <value>39</value>
                  <value>40</value>
                  <value>41</value>
                  <value>42</value>
                  <value>43</value>
                  <value>44</value>
                  <value>45</value>
                  <value>46</value>
                  <value>47</value>
                  <value>48</value>
                  <value>49</value>
                  <value>50</value>
                  <value>51</value>
                  <value>52</value>
                  <value>53</value>
                  <value>54</value>
                  <value>55</value>
                  <value>56</value>
                  <value>57</value>
                  <value>58</value>
                  <value>59</value>
                  <value>60</value>
                  <value>61</value>
                  <value>62</value>
                  <value>63</value>
                  <value>64</value>
                  <value>65</value>
                  <value>66</value>
                  <value>67</value>
                  <value>68</value>
                  <value>69</value>
                  <value>70</value>
                  <value>71</value>
                  <value>72</value>
                  <value>73</value>
                  <value>74</value>
                  <value>75</value>
                  <value>76</value>
                  <value>77</value>
                  <value>78</value>
                  <value>79</value>
                  <value>80</value>
                  <value>81</value>
                  <value>82</value>
                  <value>83</value>
                  <value>84</value>
                  <value>85</value>
                  <value>86</value>
                  <value>87</value>
                  <value>88</value>
                  <value>89</value>
                  <value>90</value>
                  <value>91</value>
                  <value>92</value>
                  <value>93</value>
                  <value>94</value>
                  <value>96</value>
                  <value>100</value>
                  <value>103</value>
                </bin>
                <bin default-name='false' value='&quot;Student Age&quot;'>
                  <value>11</value>
                  <value>12</value>
                  <value>13</value>
                  <value>14</value>
                  <value>15</value>
                  <value>16</value>
                  <value>17</value>
                  <value>18</value>
                  <value>19</value>
                  <value>20</value>
                  <value>21</value>
                  <value>22</value>
                  <value>23</value>
                </bin>
              </calculation>
            </column>
            <column aggregation='Sum' caption='AgeAsInt' datatype='integer' name='[Calculation_724516656912158733]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='INT([age])' />
            </column>
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column caption='Age' datatype='real' name='[age]' role='measure' type='quantitative' />
            <column caption='Charge' datatype='string' name='[charge]' role='dimension' type='nominal' />
            <column-instance column='[Number of Records]' derivation='Count' name='[cnt:Number of Records:qk]' pivot='key' type='quantitative' />
            <column-instance column='[charge]' derivation='None' name='[none:charge:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0nbbx59030wusu1f7b64o0gf5iou].[:Measure Names]'>
            <groupfilter function='level-members' level='[:Measure Names]' />
          </filter>
          <filter class='categorical' column='[federated.0nbbx59030wusu1f7b64o0gf5iou].[AgeAsInt (group)]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[AgeAsInt (group)]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[AgeAsInt (group)]' member='%null%' />
                <groupfilter function='member' level='[AgeAsInt (group)]' member='&quot;0&quot;' />
              </groupfilter>
            </groupfilter>
          </filter>
          <sort class='computed' column='[federated.0nbbx59030wusu1f7b64o0gf5iou].[none:charge:nk]' direction='DESC' using='[federated.0nbbx59030wusu1f7b64o0gf5iou].[cnt:Number of Records:qk]' />
          <slices>
            <column>[federated.0nbbx59030wusu1f7b64o0gf5iou].[:Measure Names]</column>
            <column>[federated.0nbbx59030wusu1f7b64o0gf5iou].[AgeAsInt (group)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='header'>
            <format attr='height-header' value='20' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.0nbbx59030wusu1f7b64o0gf5iou].[AgeAsInt (group)]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0nbbx59030wusu1f7b64o0gf5iou].[none:charge:nk]</rows>
        <cols>[federated.0nbbx59030wusu1f7b64o0gf5iou].[cnt:Number of Records:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='W'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Weekend Vs. Weekday&#10;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='arrestdata-all' name='federated.0nbbx59030wusu1f7b64o0gf5iou' />
          </datasources>
          <datasource-dependencies datasource='federated.0nbbx59030wusu1f7b64o0gf5iou'>
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column caption='Arrweekday' datatype='string' name='[arrweekday]' role='dimension' type='nominal' />
            <column caption='Charge' datatype='string' name='[charge]' role='dimension' type='nominal' />
            <column-instance column='[arrweekday]' derivation='None' name='[none:arrweekday:nk]' pivot='key' type='nominal' />
            <column-instance column='[charge]' derivation='None' name='[none:charge:nk]' pivot='key' type='nominal' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <sort class='manual' column='[federated.0nbbx59030wusu1f7b64o0gf5iou].[none:arrweekday:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;NA&quot;</bucket>
              <bucket>&quot;Sunday&quot;</bucket>
              <bucket>&quot;Saturday&quot;</bucket>
              <bucket>&quot;Friday&quot;</bucket>
              <bucket>&quot;Monday&quot;</bucket>
              <bucket>&quot;Tuesday&quot;</bucket>
              <bucket>&quot;Wednesday&quot;</bucket>
              <bucket>&quot;Thursday&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <sort class='computed' column='[federated.0nbbx59030wusu1f7b64o0gf5iou].[none:charge:nk]' direction='DESC' using='[federated.0nbbx59030wusu1f7b64o0gf5iou].[sum:Number of Records:qk]' />
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='header'>
            <format attr='width' field='[federated.0nbbx59030wusu1f7b64o0gf5iou].[none:charge:nk]' value='220' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0nbbx59030wusu1f7b64o0gf5iou].[none:arrweekday:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0nbbx59030wusu1f7b64o0gf5iou].[none:charge:nk]</rows>
        <cols>[federated.0nbbx59030wusu1f7b64o0gf5iou].[sum:Number of Records:qk]</cols>
      </table>
    </worksheet>
  </worksheets>
  <windows source-height='30'>
    <window class='worksheet' name='Sheet 6'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0nbbx59030wusu1f7b64o0gf5iou].[ArrMO (group)]' type='filter' />
            <card param='[federated.0nbbx59030wusu1f7b64o0gf5iou].[none:Calculation_724516656900886538:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.0nbbx59030wusu1f7b64o0gf5iou].[Arrweekday (group)]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0nbbx59030wusu1f7b64o0gf5iou].[Arrweekday (group)]</field>
            <field>[federated.0nbbx59030wusu1f7b64o0gf5iou].[none:Calculation_724516656900886538:nk]</field>
            <field>[federated.0nbbx59030wusu1f7b64o0gf5iou].[none:charge:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Sheet 7'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0nbbx59030wusu1f7b64o0gf5iou].[ArrMO (group)]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0nbbx59030wusu1f7b64o0gf5iou].[ArrMO (group)]</field>
            <field>[federated.0nbbx59030wusu1f7b64o0gf5iou].[Arrweekday (group)]</field>
            <field>[federated.0nbbx59030wusu1f7b64o0gf5iou].[none:Calculation_724516656900886538:nk]</field>
            <field>[federated.0nbbx59030wusu1f7b64o0gf5iou].[none:Calculation_724516656912158733:ok]</field>
            <field>[federated.0nbbx59030wusu1f7b64o0gf5iou].[none:charge:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Sheet 2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0nbbx59030wusu1f7b64o0gf5iou].[attr:Calculation_724516656912158733:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0nbbx59030wusu1f7b64o0gf5iou].[none:charge:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Sheet 4'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0nbbx59030wusu1f7b64o0gf5iou].[none:arrweekday:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0nbbx59030wusu1f7b64o0gf5iou].[none:arrweekday:nk]</field>
            <field>[federated.0nbbx59030wusu1f7b64o0gf5iou].[none:charge:nk]</field>
            <field>[federated.0nbbx59030wusu1f7b64o0gf5iou].[none:driving:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='W'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
          <strip size='160'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0nbbx59030wusu1f7b64o0gf5iou].[none:arrweekday:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight field='[federated.0nbbx59030wusu1f7b64o0gf5iou].[none:arrweekday:nk]'>
          <bucket-selection />
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' maximized='true' name='Sheet 8'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0nbbx59030wusu1f7b64o0gf5iou].[:Measure Names]' show-morefewerbutton='false' type='filter' />
            <card pane-specification-id='0' param='[federated.0nbbx59030wusu1f7b64o0gf5iou].[AgeAsInt (group)]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0nbbx59030wusu1f7b64o0gf5iou].[AgeAsInt (group)]</field>
            <field>[federated.0nbbx59030wusu1f7b64o0gf5iou].[none:charge:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Sheet 2' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 4' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 6' width='192'>
      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
    </thumbnail>
    <thumbnail height='119' name='Sheet 7' width='192'>
      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
      flRbTRTnAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Sheet 8' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7EAAAOxAGVKw4b
      AAAgAElEQVR4nO29WYxcWXrn97tr7PuWEZmR+8K9utYuqdXd0rSkVmM0mvHYxsDjFZIB208G
      bPhRDzbg5cEeDGzAsB/sBxvwAJrBjC1rZEk9knqR1FtV10YyM8ncl4iMfb8Rd/dDstjFIlnM
      TAYrmcn7KxSTGTfiu+cG7/+ee/73O98RXNd18fB4RRHPuwEeHueJJwCPVxpPAB6vNJ4APF5p
      PAF4vNJ4AvB4pfEE4PFK4wnA45XmUgvAtu2xxbIsa2yxbNtmnM8fx9m2cR+n4zhji/cijlMe
      W8SXkD/fuMdqvTqWWC4gjCXSeGONO97zxnqj/RPeaP10LLE+j+uCMKaAn8a6sAKwRxrVTo9A
      MEw8Enrie9qjIaVe90tu2avNYvMQp7728Pdx59mMM57LSygAZ9jguz/4kDffusLqaolYKond
      3uNo5Gcpo7C+3+D6tRUqhyWimQyGY7F5+zaWGiAXk9kvt7jxxlskQr7zPhSPC8BLJwAkP7Gw
      TKPWwBeKg23QH5lk4llavQaZbIZhXyOZSuFiY5gmyYkZZEb0hl0iQR+27eX3eZyMl04Aguxn
      eeU64SBsHhrMzeZgbgrNhEhgns5gRDwSotPtE46EEQSB4/9c3J0+q0dDln0v3WF5vKQIlzkd
      ujvUGJdvYFsWkjweYTm2jSiKYxvRjbNtzxvLbw/x26PjWI6DKAgIYzpOy7aQpfEc56exLvWl
      cmiaDMdkhVq2hWyN6SR7IICxnhhjatvzxuoiAAEAbMdGFMZ4nI6FLBy3bXK4h+Ce3WJ1bRtH
      kl60AFxGIwO/38dooKGEgkgvdoeP8P3tTd4vH36Je/T4svjP1/9LAs7oueOMVQCDXotypc3M
      9AQmKq6psX1/g9hEEbdZx59PoihRurUS6UKRUaeGHIzSqlSIJuLcvXOXW6+/Sf2oTKE4ie1I
      YOt0el2CsoDmqjhaG180zdbax8wsLGMhExJ0RkKAiOpSbfaYnplGFsfpQHtcVsYqgPJRlVTC
      z+adu0iFK5jtQxRfCKNRYuSoiMMutaMG4fgEiiTS6rcZ9YcEgir1pkE6naZW2iGSyrG5tYfW
      KDH32lfptls0bJe5mSJ37x8wOGxSSKVJhBQ2S3UaJvipceTIJEN+ekOdRMg/zkPzuKSMNRXC
      NjQ2tytkpqepb9/BQsE2+nQsmVQshN8XJJlKUz/cRtMt/MEwoXCUVCpFLBLEGnZQA2F2t7eI
      RMIU5pfRuj3CkSgqJqVaE0UNkIhH8UkOlZZGOBJDtQdoto9cJk0qmUCRLnWGh8cYGasL1O/3
      CYfD4wr33Pxwa4PNVnMssRzXQRTGIyzXdUEAYUyJAuNs20U5zn/t8J+gOMZztU0QhMttg1qW
      hTwme9A0TRRFGUssy7IQRfHYCh0D42zbOGPZto0gCC/1cV5qG/SnB3tst1tjieW6DsIYr4zj
      sgaP442zbeM+ThhXStyT2vZVtcfitV89c8xLI4DywSHZqclHbNaDTpuPj0rn1iaPF89SoAb8
      6pk/f6EEsL99j2q9Q3FxkYP790jlJ1H8IWx9wKjbR6kesLFT4dZXXiOoXqhD8zgnLpRdYjoS
      8zN5Goe7dIdDdvYOaHc6VKp1ABr1Br1KheZQP+eWelwULtRl0jE1ql2JxZWrKDt7pHJ5evUj
      4lPTxIIqrjVE8sVJe88APE7IpXaBSu02fevsVtlnsW0bSRpPIodjOwiiOLbZTeNs21iP03GO
      rcZxJf09oW050SSWnDx1rFfCBYoF/ESFwFhindVSVRzzMb963MlwtsUYs0FPHkvwRRCkp9uS
      L7MN+ilfugBcx0Yb6QSDwYfmmGXqmI5AwKeOdV//cu3uuSfD/Urtz/nV+r861za8KAL/xv+O
      XHznvJvxXJxZAJZpMNCGhCMRhv0eajCMIokMel0kXwBFBNNycB0TQfYjuRa6DcPWPts1l7e/
      sozW7yGpfjZuf0Aov8hESMRSQ2CNUP1hrNEASQ3waWaDIIBpWjj2cUxZsBnpFqFQkEF/QCDo
      ZzjUCUfCiGP02T0uL2cWwMHWPbSRhqsmMVwLwRF47fo0q3fuIQT8+F2NcHqCxlETRwIVFwEH
      QZUIR3Lo3Qbru2VwXGzTJRv0MWhU6Tp1OraDT5Ap37/NzK13sYYdHMdFMDUCiQnK9z+mZkdY
      zAawHBdZCkAggNMucXfzkF/+zd9mKhEc5/fkcUk5881ZIBJncX4GfzCI3u+iqMeT0LV+F1nx
      E89MUpzI4tojRNmHIrmMLMjmJpiayCIrCvZIQ1QDFKaKpOMRJFlBVvzMLSwSDSrkJibodfv0
      m1WOGl0iiSzTEynkYJRkLEg0mWV2ZpJgwMeg28MXjjG3sEhYHe99osflZawukOuatNsjEonI
      uEI+F3+8eoc7tcpYYrm4Z0rqeqv1Y95u/vVY2vCyEfit/xYpf+up21/mQfCnsS61Deolw51v
      rIsggEttg65WK5QH/bHEchwbUTybPz6rbTIz2PpFrE9TccfSsmO/3RnTSfb5WPLSryNlrowl
      9svI2QVgm+iuxKjfIRJL8OkMRNd1qDcaRCMxfD6V1lEJJxwnFX5xg1LbsnAFAflzD0lWa5Vz
      t0EBvln7Lvn6X5x3M86EGJ9+NQTg2Dp3P76NGp8g4PZp6xLXrixS3l5DEyOk/Dblls5UNsrW
      XpWJiMXHJZhNi2xs7bC8sszu5n0yk/M0K/t88N773HzrXXTdQrIa2J0qh5UGoiQzUZikUton
      lMwTcAeYgo9Bq04gWcAdVOhaPhYnk2zslJibLrBfbbK0tEhpcxU3mCbkDmhoAhMJlb1Kh5Bo
      UBm4fPXN11G+zFn3HheeXwjAMQknJ3GNNm1TICFrdA0wLYvesEtlaxcpnKbq6nSrBySTiyyu
      FFC0I4oFlTvvf0RLEJGCbUQ5yMLSMumwSMUM0+8cYal+5ooZdNtPt90hNlGkV69hii7FtIqR
      LqI1yqihIGFH5/bd2wiSj/pRhVB+AZ8IlmmhdZrsHu4Riqc5shXqlTLhuass5+PIFyq1z+Nl
      4KEARFEllYzhOgEC3Tot3U9BhZHfT0QJMJO9xmFzSCoVxrAFkuk8e9t7RFIh7u/3eO3d17l3
      d414PIZPCqP3mtxd22Xpxg2CPhdJUgj4RHyOhCxY3Nm8x+LydUIqBMMhWFsllp3kaOs2kdwc
      N69luLdTIjWRR434ARd/wI+kxMhFfdQHDumYii34yGUS7B8eomAjKxKqP4TP6wo8TsALdIFc
      ut0e0Wj08S2OgwNITxi4jdO5Wa9WqA+1scRybBvxjElik8N9CsP9X8R6AYPgcTktn48lzfwS
      UnL+TLEuggvk2aAnxLNBT89FEMCltkH/aO0OHx6Vz7sZfK3xPd5t/OCF7uP5a6Qd4/uH/wzi
      hTFFe/k5swDq9TrpRIRW3yYR+2KLU9PqDAYBMpkA7VaXo1qVK8vLz9zH7t4uM9MzT9x3yC/T
      0wWyqdhTP2/YNkPLfPbBvGBMQwP9gizUcXlvCJ7IZwTgcv/OhzT7I3KJKDv1IZlElK2770Fi
      numoQzQzyZ33f0QwO4+tNbl56yrtocLqBz9DCCdI+i3K+y1e/863aG1uYtsarhzCdkbU9luU
      8zn8gIPDxz/+cz7YbPH3/v7fpbG7RTLup9IeUe93iEVSmJ0KLUOiU9rgg3tV3n77dYa2wK2V
      Ih++9x7zV5Yp7x9SSmZo7dylbkX4e7/zGyheEqjHKXjk5sxxjstY2LbzsHR3IjvJfDFPNJWn
      EA8SzRUJ+BWyyRiicFysqDCzRCEVwbTshwGzcZlKX6F+uEcik2Hp2k2iPgnHOb7CiGqIa1eX
      USUBxxxwZ3UDy5a4cusrhH0ulmkjyxKiEuLGjSuoko8b15dRlCC5bBxBlFm8cot4QCQYy7C8
      OM2g06bb62JY41uYzeNy88gg2HVdXNfF7NfR5DTxgPBgNUPh4fS9hzVtnrBi2eH2OqWmwRtv
      3UI6QVf62fo4n6+V82mzBEH4xbYHzonrOLifdVFc93hBts98XhAE/uCjn780T4K/fkGeBPv+
      gz9FTZx+iuGTuAiD4EvvAo1rfus4HaWxrw8wxrZZluW5QJeF/U6btj4ef+R5J4sv9VbxOcfl
      Wj5NOBvXcMV2bDhNop4SQFn81pj2frG58AI4Kh2SzucYdEYEfC7toUs2efzw7WcHey/FLRDA
      f7L535MyGi8s/mm8LiGS9wTwgAsvgPrRLkNAb5tEQhb1vk0mER1byRGPy82FTx8LJ/OYnQqG
      47C9tcXRwR4Dczzrgnlcfi58DxCJRAkmw+wddVm48Q4Jn4NmmKB6yXAez+bCCyCVSgGwEs08
      fO3TwogLyTTqmFwD1zmu5nZWIsG/j2Idz04bd3n00y5qIfif/vT8VePS26BeMtz5xfJs0HPm
      e1sbrDdqzx0np5f5rdK/wBjbVfv44eJpEMNZAn/nH49p/x6fcuEEMOxWaI38hAISsUiYUqlM
      oZAHoFUr0Rk5ZNIThAIyzaHGXqf9/DvVjnArn3CeXaUbmzrHvV9eXh4BmB3+5mf3CMTihNw+
      zb7D6++8QXl/l7AiYbg2H3+yxrUbVzAtsE2T3Y01mkOXQmGC+3c+4qjZJZOfxHa8XCCPk/Hy
      2KCORX52hXhQQbccIorLyIaIaLHT0hl2O4QCIq3uENdxGGkDUAJEw0HAwbAEUonHZ595eHwR
      L08PoMSYzAjg+nFyKfq6S1QGJmfwp2wU0SaaLRIJh44dDyHNqN/FElVAYm5+Fs10iIRDyLJX
      GtHjZFxqF6itDTDHcHiyYxIaNR6rO3RWbMdBPO3CEZKC+JRxgOcCnT3Wy9MDvABM22HknP2p
      sOoYpPUqAJZt445JAK5j4wriY+nkX4g03rUTPI55oQKwDR1H9qE84wIwGg5R/YGH1eVOtQ/L
      xEFEkR8/Of9y6/5zJcMVhvv87s7//PD38Sy2dDaE2BTh3/2Tc2zB5eRMAjBHAw6rLXKZBLWj
      GtmpIr16GSWSQjR6DF0fMT9s3l0jMbeAogSxe3WUSArV0WgPHCancg9H4OX9bdKT09SrTaam
      chwelMgXp6mX9knkprC0NqgRVMmh39cQHR1DDJAKq9y/v0E8N4WpHTtAltbHVYPEvIXyPE7A
      mQTQqh2yu9/FsUcE/SG2V3/O/Z0GqfwkemMTw59lNhsnFg1jDTv0hxb2wEDo7WC7MoxGZKYy
      HK6uk5tfBKDfrrO99hFt7SrtxhHoQ27vl5nq25j9Grdef5v9zVWCyTzN/T12aiOW57JEolHM
      YY+drXvUekPcgcnNN66P9UvyuLycSQD+YARVaGNZJnu7e0zOzZEf2MQySQxZw/YlUcQRlbZG
      MZlAwE8wHMIcdaiVytRbIxYRWbh6FYBeMITr2CTSGQKhEHZfRgpHSUUGpBIx1FQYnyIRjqeZ
      yMRolRTSST8+VaJcbTCRSxOKJgkH/MQzBfzeItkeJ+S5XKDBoI/fH0SSTjrKd9i5t47li7Mw
      kx/bjKin8b3N+2w0zz4JJWXU+PbRHwLjTWB7wnTqZyKEMgR+67954jbPBTp7rEttg3rJcOcb
      6yII4FLfK7x3uM/uOHKBgJut95kbbj37jSfgpL2J+vbvIaUWxrJPjyfzQgWgaQN8skJH00jG
      4w9fH7Qr7FSHzE3mCIYC9Bpl1rYOmF2+RkiWMId9/MkkvodXDodarUkmkz7V/vfaLX4+pjnB
      2fKPKLZ/MpZYJ0W59jvgCeCF8sIE4NgGP/mrHzKzfIPy/j3iE/MkFJN634Fhma4Y5+CH93nn
      V75Br9XAxodotPjBj9ZYmpuivrNFYWqZyZTCBx/cwVHD9JoVhmKImKRTqreZmS5yUO2Sjak0
      uiOmsgn2DissXbtOxO+lQ3g8mxcmAFFSKc4tMJVNovqvYY36rK3eJ5zJMTUxw3RmitreAbGQ
      ipqbJp3V2CgNWJhfJOQTyC8uU93bxWi6JBeuo1f3WL9/j9TUIrJfZSoVoDcYUZxfYv3Hf4IU
      nWBjrYylBBjqticAjxPxQm+BMokwlY5GOhHHsSPEQ0HKrRHJdBZJURioFl3NJCjBva0WK1dW
      ONq5hxKbQhUFstksvqAfa22NRHaKRMRP1/Zh1e7z/a0mv/Wd3yQUkHj9jbfYrfaYu7bI1vYB
      4YB38nucjEvtAu23mvTM8SQwpLRDUnZvLLFs50FluGcYwWLhNcRA4pnxPBfo7LEutQuUCYXJ
      nCXBCJBdG8mxHv5uhRaQxmSp8rTSiIofQbzU/yQvHc/9bTu2jSBJD69ljm2DJD1zps1I6yP5
      QijSi3sc9oert8+cDPer1T/lVxrfG2+DnoH/t/8RytJvfqn7fNV5tDy6bTHQhtiWhe3YWKZJ
      fzDAckzq9RamaWAYJtpggGU7GKMhmxtbOIChD9GGOpX1+3Qdm36/jz4csL23j2VZDAYDbMd5
      +LNareO6FrphMBpqGJaNoY/QhiMajQaWZdIfaHSPdjlsa9iWha7rDLUBumGys73FaDig3upi
      6ENGuoFlGgwGGs7lvavzGDOP9AB3f/7X3N6q8M67v0Sj3qSY9rHXsoiE/QiGy/a9VRKpGD//
      +UfMX38N0TD5NNt+7c4njIaQTkQRu1X+7E++z+zSFXRDx+5W+ekn97l+6yZ7m3v88jfeBSXI
      6kfvE0skee/9n5OYWiCliAxMi0QyRq+2z1ppyNWcQkWRaG0dEslOs/nxjzGCeWKKTsCv0uiP
      2O10QABRFHEsm4VrN4mHfOfwdXpcNB7pAYLhOIsrK/gkiIT8GKaFpg3x+f3IisxEcY6JTILi
      3CITmQS2OcLluMqxaYywRAmfIjPqDykuLBEJh/CJDpIvxPziEplUilTMx95+mWg8TjI7STGf
      ozA1w0whh20aGIaFIstEExkUo08om8PQNGKZApPZKMFYlkQ0SCoeQzcdFEVFxMZ2JWLJNItz
      02eaV+DxavKFLtCo18T2JQmdYDJSs9kkmUyeaKeH+/vki8XPjRMc7t+9jeNPsDxXHEtx2z+6
      e5tPqkdn+uwvNX/AW80ff+aV09fyeTqffuWPxvN/6/eR575+6mieC3T2WJfaBvWS4c431kUQ
      wKX23NbrVSqDwVhiOY6N+IRFKDL6Ecu91VPFcl3ngQX6ix5Afec/RDhFfU+P8XBuArBNA0eQ
      Hs7lNQwDVX30Xst1LVY/XmPptRucRfd3KkcvfIGMG50PmC39wXPHUd/+vfHdYXmcmHMTgNbv
      MDIEKtV9AqEEWxtr3Hz9HVqVA5KFOUaNfYb2iN2SQTy9Q2vgMpEI0Orr+DHQhCBhcUS1pTE3
      M8n2boniZJbDUo2lq1cIKF55dI9nc259rqEPGXT6JKfmEHCYX1wiMKqz3+zRaDTp6w7LK3Nc
      vbLMvburdOsNjpotJnNJVu9t0mo06Jsu0/kYO5sHzK2scLi5Tq/fpjM4z/oNHheJc+sBgpE4
      suoihwKERIFe84hhIE0hOiAWixL2xRHwkUiCb2WJes8lP5ElEAixvDCDRpBsOo5fFZlbiLB9
      b53JuUUODquEvUxQjxNyqV2g1UqZqqaNJdbTB8FVFvtrp4v1YEbYZ2/5lTf//TMPgj0X6Oyx
      LrUAPBv0fGNdBAFcahv0j9fv8nHlbA/CPs+THoMJOPyn9/+7544V+r0/Q5C90ofnwdgFsLe3
      RzISxZeIP926HLXZ6wpMZz+zVlW/wr1ugOXCyUqcD/tt+rpIJvXZ99s0Gj1SqeP5xyPLomfo
      ZzqOkyC4Dq5WP9Nn3S/4zePLY6wC+Pi9H1HVYCmnI7YO+XirxevLefaOGsSiKdrNMtlMmkat
      QiA1xb/4/h+TnL1J2Gowkcui2wG2D3Vcvc9cMc2PfnqHiWyMcqNPNBZH79TQXB/zuRB7Rw0S
      qRSWZdNvHtHr9/CFAxzsHvHVr3+T+EnyNzxeecYoAJd4dpKkKCI7LuHsJLdcke5Q4Or1q9TL
      DZau3cAZ9Ji4eYtavctr7/4qmUSUQT/NREzFHvjo739EfOZ1BFenMLtCWukRyMwyapbJzi+D
      a2MaOrdu5Gh1ekiCgyCJJCdmmMrHiUcyxIKeC+RxMl6uQbCts1tqMj01MZYqbD/c2mCz1RxD
      w568FKmAw7+5/3+eOtbn6wIF/s4/RpDOLlpvEHz2WC+XAMaM5wKdb6yLIIBL7QL99GCP7Xbr
      1J+LmW2+Vf3/HnnNcV2ssdUGdZHSy/je/Y/GEs/j7DwmgGq1SjabBVzarQ7xxLGj0mu3CEQT
      yF8oZpdqtUY2m8XUugxsG30ok8tGjjfbOgfVHuGARDz+7GoHv2jL2TjotPn4qHTqz2VGR3xz
      +/HFKMa69uSoDXgCOG8eCsB1bNZuf8RRz8IcdukaIhG/ymA4wie5jHSbfr/F3mGV4twCR/u7
      +CIprs2lOWrZNKpHpFJRaoe7bG/tc2Upiyb40TpDKgdrBNNFFgtRun0NbIF2rYRGiKtLsxwc
      HBBWZXTT5KBcJpWfoX+0R8eSsbQ2h/URE/kY3a7J1aVpPvrw50xMzWMhgjXCHLQYSTGuLU6f
      53fpcQF5eD13bRvBH2YiHWNkwsriDP2ehj1sUekamP0+pitw8+o8tWqLbHEOxxggKGGqmx9i
      ChKdwZBoKs9SLklv1GNkgaHV2S+30fXRw532+x00HeaKeRzHodvpUKtW6Q9NVm69jjDYR4pM
      kYkF2djYxLV1On2TK1cWEQQBWRJpNhu0Ox2OKjUUWabbbGI4Do7jcImHNR5j5mEPIMoKiaDK
      UAiSTYQRBZGp6Ul8kkPMVlCwECQRVZGYL8r8+Z/9GYWrbwICxZWbRIM+eqaMT3KQgaDo4AgK
      hCKEowGUSBwkH9OFDLhJMIeUq01S8SBTuSS1rkk+l8YnS2SnrtGqliCQYXIiyUGtz+RkDkkA
      VxCJRGJEc0WGjTJOrEiQEXl/CqPfQxdF/IEXW27F4/JwqV2gUrtN3zp9arTqGExpu4+8Zts2
      0phWiXQcBzGYQJ64MZZ4ngt09liX2gWKBfxEhcCpP6c4JmI4+MhrrmUhPqelKihBBMX/0Ab1
      OH9emABc18FxeOLySeP057+If7l290xTIr9R+y7fqP/F2Nvj+/p/hvrW7449rsfZeSFnoWOb
      NJqHaFqISERFlUEJhLD0IZLq52Bnk1xhmlBAoT8YEQj4kWQZx7KRJOh0B/jEAfsNhflijIGm
      Ewn56fU1AqEwiiTQ7/VQVYXeyCbsEzFtAZ8iMtRNIpEw4pg8e4/LzQsRwN7WBiNHR5Zk6rUO
      OxurzF+/QbfZxZVk/ILO5sYazlBjY6/E9ddeIxL0gy9GzGny1x9v88b1SWp1CWtQQhQdaq5E
      3Q4QVhssTyf4qx/8Dbdev4Wmmxz0+ow0k3BYwjJdZlaukfAqw3mcgBdyIyqJ0BuMkBQJ1ecj
      k04w0Axsc4goqwiujWFBNJlkbmGRyeI0B7v75FJR1FCMmOpAII0z7KH6ZLp9Hb9fptft4AsE
      EBUf6USY7kBHUVRsfYimG0QSaeZmpjjxopUerzwvpAcoLlyl+JnfZ2eLT30vwKjfYmphBZ8s
      QjTFr/zabwCQ/8Yv1gSztRbRqQTRBxf2t7/2zeO/OBZmr0Ukm2R6avKRiSZh1Uc6GDp1+0PR
      LII1c+rPPRNf7Nnv8fhSudQ2qJcMd76xPBv0nFmtVigP+mOJ9bRJ8Z9FcQx+ufH9J24TwhnU
      W/9gLG3xGB8vWAAOrVYXn89HMPh0P77fbeMLRlE+k2lXq9VIp9MP8+a7rRbBROJUDV6tVV54
      ZbjPErAGvHX/f3niNjF71RPAS8iLWybVHHLn9h0MOUouHqRe7qPLUULugLrmUszGqLQGhFWH
      jb0jbl67wsHBITNTUxxWa+iOi+C6xJMROj2bUf2I+zs7TM8uUNvfJJgqEJQlfJKNpuvUuzoz
      +TjbuxWWrl4lqHqV4TyezQvzS4aNMrGZK8SCCv3eAMs06XabNLo2yYBDqVwnO1mkPzRZnC2w
      e3+NvjagUa3gS08SkATCPof3fnYXNRxEkFSWVlZoHm2gRifptY5o1Bs0qkdohoWm9Vi/s0p/
      0KWnmS/qsDwuGS9MAIF0ge7BBv5wlGwugz8QIBpJMpHy0zV9zMxMEfErxEM+Wn2LpSvXCAWC
      JLIT5OMhctksruhD8qtEFJFoKkNAVclPLeBqFRLZaSJBgZEQIBryEwxGWLl2lVAwTMh/qYc2
      HmPkpXaBLFPHEWRU+Wy3M+vVCvXhmCrD2TbiM5LhFMfkK+2fPXGbEEyirHwH8Fygs+LNCT4l
      ng16vrEuggAu5L3CcDgkEHh2lucfrd3hw6PyqWL/e7v/Kxm98sRtoye++sUE/8H/gZRaPMMn
      Pb4MniwAW2e33CAWChNPPFqprby7S2pmhieWnXJd6o0G6XT6kZd1rcnHtw8Jh21CsQkSifhx
      7s9DBuzuDpmZefRz7VaLeOLRucOubVKtNZmZnsSxDLpDk3jkyU97DdtmaJ1uQOzoPdC7p/rM
      Fwe0n/0ej3PjMQH0awd8srVPMJZh1Nf4+Kc/ILlwE6d9xMAWifll9o4OSSQzvPeTHzF/9Sbp
      VB7BHlCcSPLee+9xfX6a7a5NPmDwow/u89bbV9GGJt1unWkpRNXQuFupMrN8HVVvsHFwSDCQ
      4Z/9kz8lMrXI3EQOWbIxDYtaaZc+QczaBvfKBt/59i8hKQL/zz//v3nnl95hYJhsrd2hO3RJ
      x2Xa3RE33nibeNCrDOfxbB67ObNNE0GSESVwHZjIT1CtVnFc4MFwQRAEbMdhanaRfKGI3d5G
      juRQg3HS8RCCIHLlxg103WRxKo4/UeDKlavML66QT0VxHAdBEBEQsEwTQZYRXJt0YYbZyUkk
      s46rxHGd4zoMoiCgBGJcu7pAsz0km4qRTQSpNtq4toPtuAi4+CMpri/PHzfcw+MEPNYDRPOz
      vDMx8/AJrOu6LAoCAi6uC4LAg58CK0sugmBzt5GkmDm+DXnjna89XAAu8/o7D5NZbXcAABZS
      SURBVN97zCwAi6ks7tz88euJRdJTx5XSjsfjAoIw+eD9yYdtEIQFHMtgv9xAUYJ89Zu/fvx5
      12J90MEfi7Iw+wIS2DwuNRfKBXI/0wOdBMuyxjaP93kcpc+313OBzsYr7wKdtl7ofqdNWz+L
      d/M4p50UrzoG19IpBL+XAv0ycyIBDPp9AuHwYwOGWmmXxlBgaTrHYaVJcSoProPrCojig5PV
      segPTcKhL7Yt9UGbg7rGXHHiiVcMXevS6FtMpCLcX79HYW6ZSOCLrwY/O9j7UpPhPkvcaHLl
      q28jeQJ4qXlEAO12m3BAoa/bVPb2iOSmEEdN7u/Wee3WAvulFjPFHI1ak8niNEowitA7oj8Y
      MhoNAXAHNQ50P6OjAwKpPMVUgLu3PyIzNU9cNii1dOaLGSr1NpNT0xztrGL5UtS2P8QNpbm/
      epd3v/YuB9vbLCzPUS3XSeaLuIbJcKDR1huEc5Mc7B2wsjDJxv17BJMFJL1Fa2Dhui7LK8so
      3rQwjxPwiABKR2WmsyFKLYtwNMewcYghR5jOp1m7cwfTVhAFnUiiiCwJDHsdkplJYvEo7dZx
      EVrX0OiNbHxqGmPQgVSA5MQUertGQ3GpHZaQ0PGnZlBEi1a7T7XdYGVlicxEgfJ+nfruOr2h
      QWl/l46ZZMYvgT9Oo6Xh2OAP+enXXRx9iBLL0K4f4VNlgqKLEgnTHxkkQv4nHrCHx2d5RACp
      sI/1nSr56VnCaggzKFCvHNJ2A0wXpzisDUimssRjYcChelTGUgYIZpyDUgkpGKMQjpAUFfxB
      BceRQZQZtatI4TQBcUQslSWRTBOJhwAbVVXJ5mKEQlEkQUFrl8nkJ2mNykQTKeJqCoDy3hal
      Up2llSUOb39CYeEqYHOwdY/C9BLxkIIEiKqMfMbcIY9XjwvlAn0e17bQbRe/+uSxwPv7e+z3
      OuPZl+MgnMLNCNoavz47jRjJP7bNc4HOhpcMd0q8ZLjzjXURBHChbNDT8r2tDdYbtRO/P2J1
      +NcP/q8nbnNdF+OENqyy8h3UN/7dE+/X4/x4RABmv8oHWx3eubUEQKfVZtRvEc7PEXqKVCyt
      x0gOEj7BFMR2u/VwYQx9qOGICgHfsaKHvS5CIIR/jPfvzaHGXqd94vcnjDrO0cdP3X7SrtLJ
      v3bifXqcL4+c1uWdDTQrzUc//SE9MUEhFcJnD6kebpFOpKg1GlTrLTKJMBv3t7jx1W/C0Tqr
      Az/zEZd6e8DKG+/Q3lunWq1hKWEm8nnKGx8TnLhCzGdTL+9T6w4JySI9R2Em5efjjTI3l+dR
      pTYfViskEnlW5rP81Xf/knBxBaO+SXL6Oq39NeKTi0iCgGIbOJh0DQGrXaZjBfmVr72F7FVE
      9DgFj9yc5fJ5luam0UyHfq/NSD9eZNoyRxwe7NPra2SmFhGNPsF4EgmHTC5HJpVCMywyEYXu
      0MGRA7y2UmRq/jrWqInt+uk2m+j6CCkQ5cryDMl4lnQqSafbQ3ZMOn0NQ3dYuvkaPtHEHbQY
      qVE67SaRSJRGo0E0GqHRqNNp1DgsV7GRWVkq0u0bxCJB9NEIXdexnUs7rPEYM4/0AEpskqyg
      ELpyHdQAAVVGPM5ro93qEo5GkGQFOXOTYL1JPBJAlQLknTbxwjLtvkEmJmMGCigiTCDjRhZJ
      xjL4QlEUSUAQBCRJJBJ2aXe6BLMr5Io2kVAQURQQFIVIYRJBkXntKgQjMcxhjylfBEfvk/eF
      wNSwUAgH/SiSyltffYuhCZLgemuue5yKS+0CtbUB5ikOT3RtEsaT1xW2bBv5pLlA/hhiMPnU
      zZ4LdDY8F+iUmLaD/pQZWQF7QNx4fAnVp8nFtW3cZwlAlJGyV07ZSo/z5FQCME0dUVSRxrD+
      lq7r+HzjK2HuWga6I+JXf3FIf7l1/6nJcF9p/4zfLv/zU+3jWYstCYEE4f/4h6eK6XG+nFgA
      w36b9Y1NZuev0m3VmShMUK9UEGQFV1RIhmRqHZ1cPMBhvYui1WioWTIBSMejlOs9isUJmkcl
      bCVMt36ILxQnm04iyTKmYdJtVvHHc1j9OlIoRTzsp1raQwqlUGwNzVEICDoj/AQEnZ4pkY4G
      kVWZUbvCXsekW61z4/U3CHu1gTxOwAnPEpfdvQOikRCl3U1i6QSb66sYYgxHr+MPBNhfP6TV
      tRksT9GoD1nIBYnGYnRru3SbdXKTs+DaHO7tctixWZjOIOl91u43Kc5MU9vbp16rMTU74uPb
      2yQnJvnaW9fY296iZZcohAWsYBqxX4XoBH6jycZug5nZGQqTSRqtDrIvTjgSPS6z7uFxAk58
      psiCTb01IJ6IUdovEUmlyGUz5PN5UvE46UyWbGGCeDiK6Fr4YjGqpTLBYIhoOMDefhnHdREU
      H+lEDEV0KDX75NMJNtfXsGU/8XgEA5V85rhnABdJ8ZOMR4nGYpiG8fAngkwmkyAUlFlf20RW
      Q4SCERy9w0C3XuBX5nGZuNQu0Pc277PRbDxx28Jgna82/urEsY7nJX/x2EfwRQj89j96ZizP
      BTobXjLcKfGS4c431kUQwKUeKb53uM/uKXKBnsSN7kfM9+/hui7WF/QAghLA/63ff659eXz5
      jE0AnXabaCzOaeatjwYD1FDosYFIqXQIrkB+svBwzS/bGtHpmiSTkUffbI+otQ0yqSifZ6/d
      4ufPOSc4Wfkx080T3Cr5Ip4ALiCPCOBob4tSpUF+eprS7i7J/BT9xhGJiSLto31iE0X0VgVL
      jSIbLdxgBnFYx/alCCmgdescVNrMTxe4t18mX5ihmAnyyUd3SBcKHB0cks5P0q4e4fpDGNVD
      ovPLuK0aoUSaWq1CdnIerdsBR0RyRxzWhsxMxtjY2Sc9sYSPPnd3a8xNZpACMQadGnu7JcqJ
      DDevLeLlwnmchkcuvkNL4MrSHKWddVKzVxm0G0gitNptJEmgVdljdfMArT9AECU6zRaiJNFp
      t+h2ezQ6Q67OxDk4bLFw7SauraP3GkTyS/isLtm5q/SbZWLZaeJBP4XpaWYmM6ihFLKrM7t4
      hU6z+rA9a6trmHqf/Xqf69eWkQUQJRlL12g16nR7XeqtLrmpOXyOjum6uA/+9/A4CY/0AI4x
      YKtsceutX2Z34x7FuUWa5R1CqRzDpo0/OUkmEUcjRFAYIEdj+K0umVCEVNiPIphsltpcuzaL
      I8uEUkkCAR9S4x5idgq9vE9x8RqyKIETQrSHHJWb5AtZggGZ+2v3mF1YBnMIrsBUPslOucPi
      bI7NnRIzs3NIgk4kEmdqbprd7R2KxRk61UOi+SJ6t8NIFPEHwqheXrTHCbjULtB+q0nPfFYC
      wxeT0SskjOazC2OJMvLc108U03OBzobnAp2STChMRjx9TyC7NpLz6cO0MLCAa1lIn7dUFT+C
      eKm/wkvPS/mvZ9vHGZyiJD0c1H56b//Y1cR1sV0X6QlXmT9cvX2mynDfqH2Xb9T/4pnv8//t
      /wFl+dunju/x8vCIACzLRNcNAoEA+miI4gtgGSMEWcW1DARZRbBNXPG4nLmNiISD7Ypo/S7x
      eIyRYRHwqYz0EYrqR5ZERkMNWfVh6jqq349tGjiItI5KRCYK+EUBVxCwDAPVH2Dj/jo4IkvL
      8+imQ8Cn0O3U6QwkioUE2nCE3+8DQcQ1+2wddJguTjy1PIqHx9N4RAC7G/cwTAsLG91SURWo
      7u8yc+019u9+xNTyVdY/eh8hUiCt9lEzy9iNDcTkPCHBpFrex7FNZDlEy4FYKMJcxsft+1Wy
      cZl6z0aVbDTNQlBkVL2P4fdT2dgink6imzaCEuDT0/j9v/4LNg413nj7OpYxIhidpHu0xfc/
      PuDNK5MIkSztahmtP+JOu8Vrb956Obs0j5eWR+4bXMdmMNQJhSOYuoasBMlPpOl0ekzks3R6
      PXL5KRZmJ8lO5Bl026RzE/S7bWRZRlUktJFFIBhkaWmZcEBBklVcc4grKhgjDVn1UyjOks8k
      yWYTjEYmhZkF8ukYo6GGovqQZQVZkYnE01y9toQqwnBkIIkiaihOzOcysmFr/S66DbZlgCwz
      aLfodDsYlrdAhsfJeMQFajabJJNPn8p30fiju7f5pHp06s99tflXvNP862e+z/+t30ee+8ap
      43su0NnwkuFOiZcMd76xLoIALvUt83q9SmUweOx1ybV5t/GDU8VyHAfnM/+Q8uLf8pY/vQS8
      cAH02m2UgA9ZCfC0iVqtRo1IIvPU7V+EMdIwXYlQ4PH5xXcqR0+0QRXH4I31//H0O/sMYmzK
      E8Al4MwCaB7tcdg2yMVUDspNlq8ss7t5n2xxnu7RLkpsAllvcW+7xrWrU4hKgL29Q/LFWfq1
      fQw5wvWlWQDajRqCJLKzvc/s3Azb2zssrVxhZ+MeueIC/doukdwcotmn2dXwo9NzA0zGFe6s
      bTE1v8jWvRL52Xl6lQqh7CTZ+JPXDvbw+CxnvjkzDIP+oE9vYLAyn+Luex9x2BlSO9pk9X6Z
      Rq1CxxCYL+YYDfoMhz3ys/N0KhWkaBrX6LO5ukpfP17IuttuMmyX2TxsYVkj9tfuUuoOqTca
      DC2BVCxIq9mkUJig2e6yfW+Dg3qHKyuLmFqXwaDHxtYumiGTiQXH9gV5XG7O3AP4/AFCQRdb
      77G2q3Prnde4t7pGIj3Dsi0gR1OoZofWSGQmnwVZRlYD+PNpPvjpj7AjE/zG194CwEpnwbXp
      pSdJZKLUSl0mFxcw7t0nHosT9CUQgFQ2T9CnEo2EmQ2lmUj62C3VmJ6aYKANH2wPnnoxPY9X
      l+d2gSzLRJKUE0+EcV2HbruNGow8rAz9olitlKlq2mOvS659Ipvzs9iO80i6hTT/TaTk/Jna
      5blAZ8OzQU+JZ4Oeb6yLIIBLbYP+8fpdPj7lg7B/e/d/I2NUHnvddUF/0MtJM18j8O3/ehxN
      9DhnXioBNBoNUqnUg99s2q0B8cTjc32PcWm3OsQT8afGG1kWvQcl3k+KrTVw9fpT9vgAvXuq
      mB4vLw8FYJl9fvo3H6DGEii2xsgSCKoudU2hGLPZ7QhMRSze+2SX119fYWu/wxsrOd5fLfEb
      v/lNajvrVJpt0pkUO3ttYskYzd1P6Co5lrM+egOdK299ne7+XRpD8GHQ7esks3Ha1QZqME6l
      vMfNm1f54Q9+wBvf+DZuf8j63fexlDgJsc+HG2XevHmLrguv31iiVm2wv71Gf+Rw861fJqye
      51fpcRH5RQ/guiCIiAI4Log4RJIZytVNlOIiZmmDgS/O4vIC8XgK3/YhhjJP0B3Q0mwsy0ZR
      FSzTRBBkRNfBH06QyuQJBSVmCjC0wLYdVMWHrY+QRQETieu3XqNWbWMPQ3Q7PWYXZ9HafXwC
      5CbncHEZNHSWlpfwSwqTK/PIONi2TSSZY8oHlgODXud43z4/fsVbKtXj2TwUgCDKzC+vkMkm
      wXVwXJAEKBSKyKJAPj+FLIlY1nGd/PRvZJFliUImi6LIsHwN07SQ3T7BmI9cOgjOIo57vCCG
      IEAISC9dw7Ts41iOgyxJCILA9EyAqaksgihiP3j9Eaanj/ctyw9sTpHlK8dPYoUHf7hq+Pgv
      ng3qcUIutQtkmOapHQgRG+EJ34hlmcjyAwdCEBCks7sRngt0NjwX6JSUe126xpMHwaLrsNy/
      +9jrT15O48E0zQe9khjKIhW+Mq5mepwjX4oAPl9Y9tNO5/NPbIf9HnIghPxgIvvzPtH9yf7u
      U+cE++wh/8W9/+pU8cwHP+WFXyPwO//Tc7XN4+XghQjAsUbcvXuffHGaQb+H49rEAiqlahtZ
      gomJLD3dweq1cXxRYrJOte8QES2ikzPsffQTRtEJVgpJ2j0dW2sRyk6jt0q4gSTCsMVQCJKP
      KWyXWyzOTrKxucvs7CQ7OyWWr17x1gjwOBEvRAA7G1vMXblKffse/okZWuVdLF0nGxUZSUka
      jRqOpGISRNH7tAcDdvdrLExNEQUy+SLhySm2P/mIudkM37tTp6CLyFYP1VUQbQWf3ebQUmhW
      D9mTRLTBkGariaYN0S3bE4DHiXghAigUsty5fZuJXIFULISjxVEUlZAKPiGIodjYgoQkBcD2
      MWjrJFJporEoiiSiRPys399hamqaYCRCIVEmFovhaha2INCqHOBP5sj4JfrRBNFIiEG/h6r6
      UbwT3+MUXEAXyGE4NAgE/M9858/2dtjrdp64TXZNvn30Ryffq+sgCsfiEjMrqF/5t0782c/j
      uUBnw0uGOyVeMtz5xroIAnixLpDrPnzY9Xlsy0KU5VOUM3exLOf4AZptP3JiO44NiIifK4P4
      0/1dttqPrwX8KXODDV5v/+xke3ddTEFAyl5Fffv3TtzqZ8UcFy9jrE/jvIxt+zTWi+0BXIeR
      YeH3PZ6kY4xGyH7/KaakuYxGOn6fijYyCH7mFsgydRBV5M+tX2ye4UHY03Ac56WMNe54444l
      CMLYJii9iOO81LdAz6zofI6xRFEc24nxsh7nuAXwIo7zUgvAw+NZXHrPsN9pMRgZmKaJa5vo
      5unKJtqWwUAb4VgWtuui6zpnvWK4jk2jXmNk2pimiaHrOGe9/rgu7WadTl87PjbHQjeflshx
      Mgb9HpZpYTnO8x2nbVGrVugNRsfHaTzHcQK61qfZ7mGaJo5joRtnXwe6125SqVTQhvrx+PTM
      kS4CRpf1rRKiBIlIEMfQyM5d4fEKQk+n02xy1OpTjARpSRaW4WeumD1Tc0Zal16vx1GjT0g2
      0XSXK1eXzxQL16I/0Chv7pFJJ3BtnURhHt8Z08ANrc2Pf/weN1duMJJ1TNPP/HTuTLG0Vp1y
      s8N0IMLh3h6a7rByZYUzLeDm6Kyub5CbLKK16piuQSw3i08926lr2xaVg120mI4YdC53D+Dq
      PWKFOSIBhV6rSm0IYfV0J0gyO0HQJwEmt+9uksulzrwQn88fwnUdposFSltrSNEU4lnvj0UF
      ydERfX70XpNSRycaOKtF6LK+uk4woKCNNO6sbpLNnv04RZ+C0etQqbUo79xDCCeRzrBQCQCG
      Rrs/ZH9vj263yUFzSDx49plP8WQKfyRJJiqzurpxuQUghDL0dj9BsyVSuSLLuQjV7uhUMcq7
      G2xtbdPRJd796puUDw45a2/erOxTqjRotDrMXn8T36iFYZ+tkrVjDKm3e7i2TTiZ59p0mkrr
      8TKQJ6U4O080EkbxBXnnnTeplEpnPk7XOV7IRBAFZq6+TtDsop+1YrcvSj4eQJQkYskJbszm
      OGr2zxYL0Lot4pkJJNnP2++85Q2CPV5tLnUP4OHxLDwBeLzSeALweKXxBOBxIXAdi7XbH1Hv
      PF7q8otwbJP76xtYjsX2zh6WrtHq/cIsuNzPATwuDZ/85C+xk8uoosPaJx+Qml5BsocIApim
      QaV0RFjV+fP3G/w7//BvozcP2Wvo+Prb/GDdYHY+w//7B/+Uv/WdX6OmCbx+/QqOMfQE4HEx
      aHcHXLs1iV76kLoTZ+373yMe8yEJ0Gj3eHM2yp2mj1y+iCpa/MWPPqSQFCk7YZauzCID8yvX
      2Vq7iz+e4s5OAqOx7d0CeVwMXn/jTX76/e/SdCN0D9bITs1hax26ushEYZJUdpJ8fhq3d4Du
      SBSyYQ67Aoszk0yk4wiCQm5qmvlChnB6kubuGq4S8p4DeLzaeD2AxyvN/w+90tmACUmbzQAA
      AABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='W' width='192'>
      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
      AElFTkSuQmCC
    </thumbnail>
  </thumbnails>
</workbook>
